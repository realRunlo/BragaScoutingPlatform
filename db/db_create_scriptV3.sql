--
-- Script was generated by Devart dbForge Studio for SQL Server, Version 6.5.16.0
-- Product home page: http://www.devart.com/dbforge/sql/studio
-- Script date 01/11/2023 16:42:39
-- Server version: 12.0.2000.8
--



--
-- Create table [dbo].[sysdiagrams]
--
PRINT (N'Create table [dbo].[sysdiagrams]')
GO
CREATE TABLE dbo.sysdiagrams (
  name sysname NOT NULL,
  principal_id int NOT NULL,
  diagram_id int IDENTITY,
  version int NULL,
  definition varbinary(max) NULL,
  PRIMARY KEY CLUSTERED (diagram_id),
  CONSTRAINT UK_principal_name UNIQUE (principal_id, name)
)
GO

--
-- Create schema [scouting]
--
PRINT (N'Create schema [scouting]')
GO
CREATE SCHEMA scouting
GO

--
-- Create table [scouting].[area]
--
PRINT (N'Create table [scouting].[area]')
GO
CREATE TABLE scouting.area (
  idareas int NOT NULL,
  alpha3code nvarchar(45) NULL DEFAULT (NULL),
  name nvarchar(45) NULL DEFAULT (NULL),
  CONSTRAINT PK_area_idareas PRIMARY KEY CLUSTERED (idareas)
)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[area]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[area]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.`area`', 'SCHEMA', N'scouting', 'TABLE', N'area'
GO

--
-- Create table [scouting].[team]
--
PRINT (N'Create table [scouting].[team]')
GO
CREATE TABLE scouting.team (
  idteam int NOT NULL,
  name nvarchar(45) NULL DEFAULT (NULL),
  official_name nvarchar(45) NULL DEFAULT (NULL),
  icon nvarchar(200) NULL DEFAULT (NULL),
  gender nvarchar(45) NULL DEFAULT (NULL),
  type nvarchar(45) NULL DEFAULT (NULL),
  city nvarchar(45) NULL DEFAULT (NULL),
  category nvarchar(45) NULL DEFAULT (NULL),
  area int NULL DEFAULT (NULL),
  CONSTRAINT PK_team_idteam PRIMARY KEY CLUSTERED (idteam)
)
GO

--
-- Create index [area_idx] on table [scouting].[team]
--
PRINT (N'Create index [area_idx] on table [scouting].[team]')
GO
CREATE INDEX area_idx
  ON scouting.team (area)
GO

--
-- Create foreign key [team$area_team] on table [scouting].[team]
--
PRINT (N'Create foreign key [team$area_team] on table [scouting].[team]')
GO
ALTER TABLE scouting.team
  ADD CONSTRAINT team$area_team FOREIGN KEY (area) REFERENCES scouting.area (idareas)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[team]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[team]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.team', 'SCHEMA', N'scouting', 'TABLE', N'team'
GO

--
-- Create table [scouting].[match]
--
PRINT (N'Create table [scouting].[match]')
GO
CREATE TABLE scouting.match (
  idmatch int NOT NULL,
  competition_season int NULL DEFAULT (NULL),
  home_team int NULL DEFAULT (NULL),
  away_team int NULL DEFAULT (NULL),
  date datetime2(0) NULL DEFAULT (NULL),
  home_score int NULL DEFAULT (NULL),
  away_score int NULL DEFAULT (NULL),
  winner int NULL DEFAULT (NULL),
  CONSTRAINT PK_match_idmatch PRIMARY KEY CLUSTERED (idmatch)
)
GO

--
-- Create index [away_team_idx] on table [scouting].[match]
--
PRINT (N'Create index [away_team_idx] on table [scouting].[match]')
GO
CREATE INDEX away_team_idx
  ON scouting.match (away_team)
GO

--
-- Create index [competition_season_idx] on table [scouting].[match]
--
PRINT (N'Create index [competition_season_idx] on table [scouting].[match]')
GO
CREATE INDEX competition_season_idx
  ON scouting.match (competition_season)
GO

--
-- Create index [home_team_idx] on table [scouting].[match]
--
PRINT (N'Create index [home_team_idx] on table [scouting].[match]')
GO
CREATE INDEX home_team_idx
  ON scouting.match (home_team)
GO

--
-- Create foreign key [match$away_team] on table [scouting].[match]
--
PRINT (N'Create foreign key [match$away_team] on table [scouting].[match]')
GO
ALTER TABLE scouting.match
  ADD CONSTRAINT match$away_team FOREIGN KEY (away_team) REFERENCES scouting.team (idteam)
GO

--
-- Create foreign key [match$home_team] on table [scouting].[match]
--
PRINT (N'Create foreign key [match$home_team] on table [scouting].[match]')
GO
ALTER TABLE scouting.match
  ADD CONSTRAINT match$home_team FOREIGN KEY (home_team) REFERENCES scouting.team (idteam)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.`match`', 'SCHEMA', N'scouting', 'TABLE', N'match'
GO

--
-- Create table [scouting].[match_lineup]
--
PRINT (N'Create table [scouting].[match_lineup]')
GO
CREATE TABLE scouting.match_lineup (
  match int NOT NULL,
  team int NOT NULL,
  period nvarchar(45) NOT NULL,
  second int NOT NULL,
  match_lineup_id int IDENTITY,
  lineup nvarchar(45) NULL DEFAULT (NULL),
  CONSTRAINT PK_match_lineup_match PRIMARY KEY CLUSTERED (match, team, period, second),
  CONSTRAINT match_lineup$id_UNIQUE UNIQUE (match_lineup_id)
)
GO

--
-- Create index [team_idx] on table [scouting].[match_lineup]
--
PRINT (N'Create index [team_idx] on table [scouting].[match_lineup]')
GO
CREATE INDEX team_idx
  ON scouting.match_lineup (team)
GO

--
-- Create foreign key [match_lineup$ml_match_fk] on table [scouting].[match_lineup]
--
PRINT (N'Create foreign key [match_lineup$ml_match_fk] on table [scouting].[match_lineup]')
GO
ALTER TABLE scouting.match_lineup
  ADD CONSTRAINT match_lineup$ml_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Create foreign key [match_lineup$ml_team_fk] on table [scouting].[match_lineup]
--
PRINT (N'Create foreign key [match_lineup$ml_team_fk] on table [scouting].[match_lineup]')
GO
ALTER TABLE scouting.match_lineup
  ADD CONSTRAINT match_lineup$ml_team_fk FOREIGN KEY (team) REFERENCES scouting.team (idteam)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_lineup]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_lineup]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_lineup', 'SCHEMA', N'scouting', 'TABLE', N'match_lineup'
GO

--
-- Create table [scouting].[match_event_shot]
--
PRINT (N'Create table [scouting].[match_event_shot]')
GO
CREATE TABLE scouting.match_event_shot (
  idmatch_event int NOT NULL,
  match int NOT NULL,
  player int NULL DEFAULT (NULL),
  matchPeriod nvarchar(45) NULL DEFAULT (NULL),
  location_x int NULL DEFAULT (NULL),
  location_y int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  second int NULL DEFAULT (NULL),
  isGoal smallint NULL DEFAULT (NULL),
  onTarget smallint NULL DEFAULT (NULL),
  xg real NULL DEFAULT (NULL),
  postShotXg real NULL DEFAULT (NULL),
  CONSTRAINT PK_match_event_shot_idmatch_event PRIMARY KEY CLUSTERED (idmatch_event)
)
GO

--
-- Create index [match_idx] on table [scouting].[match_event_shot]
--
PRINT (N'Create index [match_idx] on table [scouting].[match_event_shot]')
GO
CREATE INDEX match_idx
  ON scouting.match_event_shot (match)
GO

--
-- Create foreign key [match_event_shot$mes_match_fk] on table [scouting].[match_event_shot]
--
PRINT (N'Create foreign key [match_event_shot$mes_match_fk] on table [scouting].[match_event_shot]')
GO
ALTER TABLE scouting.match_event_shot
  ADD CONSTRAINT match_event_shot$mes_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_shot]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_shot]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_event_shot', 'SCHEMA', N'scouting', 'TABLE', N'match_event_shot'
GO

--
-- Create table [scouting].[match_event_pass]
--
PRINT (N'Create table [scouting].[match_event_pass]')
GO
CREATE TABLE scouting.match_event_pass (
  idmatch_event int NOT NULL,
  match int NOT NULL,
  player int NULL DEFAULT (NULL),
  matchPeriod nvarchar(45) NULL DEFAULT (NULL),
  location_x int NULL DEFAULT (NULL),
  location_y int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  second int NULL DEFAULT (NULL),
  accurate smallint NULL DEFAULT (NULL),
  recipient int NULL DEFAULT (NULL),
  endlocation_x int NULL DEFAULT (NULL),
  endlocation_y int NULL DEFAULT (NULL),
  CONSTRAINT PK_match_event_pass_idmatch_event PRIMARY KEY CLUSTERED (idmatch_event)
)
GO

--
-- Create index [match_idx] on table [scouting].[match_event_pass]
--
PRINT (N'Create index [match_idx] on table [scouting].[match_event_pass]')
GO
CREATE INDEX match_idx
  ON scouting.match_event_pass (match)
GO

--
-- Create foreign key [match_event_pass$mep_match_fk] on table [scouting].[match_event_pass]
--
PRINT (N'Create foreign key [match_event_pass$mep_match_fk] on table [scouting].[match_event_pass]')
GO
ALTER TABLE scouting.match_event_pass
  ADD CONSTRAINT match_event_pass$mep_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_pass]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_pass]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_event_pass', 'SCHEMA', N'scouting', 'TABLE', N'match_event_pass'
GO

--
-- Create table [scouting].[match_event_other]
--
PRINT (N'Create table [scouting].[match_event_other]')
GO
CREATE TABLE scouting.match_event_other (
  idmatch_event int NOT NULL,
  match int NOT NULL,
  player int NULL DEFAULT (NULL),
  matchPeriod nvarchar(45) NULL DEFAULT (NULL),
  location_x int NULL DEFAULT (NULL),
  location_y int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  second int NULL DEFAULT (NULL),
  CONSTRAINT PK_match_event_other_idmatch_event PRIMARY KEY CLUSTERED (idmatch_event)
)
GO

--
-- Create index [match_idx] on table [scouting].[match_event_other]
--
PRINT (N'Create index [match_idx] on table [scouting].[match_event_other]')
GO
CREATE INDEX match_idx
  ON scouting.match_event_other (match)
GO

--
-- Create foreign key [match_event_other$meo_match_fk] on table [scouting].[match_event_other]
--
PRINT (N'Create foreign key [match_event_other$meo_match_fk] on table [scouting].[match_event_other]')
GO
ALTER TABLE scouting.match_event_other
  ADD CONSTRAINT match_event_other$meo_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_other]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_other]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_event_other', 'SCHEMA', N'scouting', 'TABLE', N'match_event_other'
GO

--
-- Create table [scouting].[match_event_infraction]
--
PRINT (N'Create table [scouting].[match_event_infraction]')
GO
CREATE TABLE scouting.match_event_infraction (
  idmatch_event int NOT NULL,
  match int NOT NULL,
  player int NULL DEFAULT (NULL),
  matchPeriod nvarchar(45) NULL DEFAULT (NULL),
  location_x int NULL DEFAULT (NULL),
  location_y int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  second int NULL DEFAULT (NULL),
  yellowCard smallint NULL DEFAULT (NULL),
  redCard smallint NULL DEFAULT (NULL),
  CONSTRAINT PK_match_event_infraction_idmatch_event PRIMARY KEY CLUSTERED (idmatch_event)
)
GO

--
-- Create index [match_idx] on table [scouting].[match_event_infraction]
--
PRINT (N'Create index [match_idx] on table [scouting].[match_event_infraction]')
GO
CREATE INDEX match_idx
  ON scouting.match_event_infraction (match)
GO

--
-- Create foreign key [match_event_infraction$mei_match_fk] on table [scouting].[match_event_infraction]
--
PRINT (N'Create foreign key [match_event_infraction$mei_match_fk] on table [scouting].[match_event_infraction]')
GO
ALTER TABLE scouting.match_event_infraction
  ADD CONSTRAINT match_event_infraction$mei_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_infraction]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_infraction]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_event_infraction', 'SCHEMA', N'scouting', 'TABLE', N'match_event_infraction'
GO

--
-- Create table [scouting].[match_event_carry]
--
PRINT (N'Create table [scouting].[match_event_carry]')
GO
CREATE TABLE scouting.match_event_carry (
  idmatch_event int NOT NULL,
  match int NOT NULL,
  player int NULL DEFAULT (NULL),
  matchPeriod nvarchar(45) NULL DEFAULT (NULL),
  location_x int NULL DEFAULT (NULL),
  location_y int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  second int NULL DEFAULT (NULL),
  endlocation_x int NULL DEFAULT (NULL),
  endlocation_y int NULL DEFAULT (NULL),
  CONSTRAINT PK_match_event_carry_idmatch_event PRIMARY KEY CLUSTERED (idmatch_event)
)
GO

--
-- Create index [match_idx] on table [scouting].[match_event_carry]
--
PRINT (N'Create index [match_idx] on table [scouting].[match_event_carry]')
GO
CREATE INDEX match_idx
  ON scouting.match_event_carry (match)
GO

--
-- Create foreign key [match_event_carry$mec_match_fk] on table [scouting].[match_event_carry]
--
PRINT (N'Create foreign key [match_event_carry$mec_match_fk] on table [scouting].[match_event_carry]')
GO
ALTER TABLE scouting.match_event_carry
  ADD CONSTRAINT match_event_carry$mec_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_carry]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_event_carry]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_event_carry', 'SCHEMA', N'scouting', 'TABLE', N'match_event_carry'
GO

--
-- Create table [scouting].[player]
--
PRINT (N'Create table [scouting].[player]')
GO
CREATE TABLE scouting.player (
  idplayer int NOT NULL,
  name nvarchar(100) NULL DEFAULT (NULL),
  short_name nvarchar(45) NULL DEFAULT (NULL),
  birth_area int NULL DEFAULT (NULL),
  birth_date date NULL DEFAULT (NULL),
  image nvarchar(200) NULL DEFAULT (NULL),
  foot nvarchar(45) NULL DEFAULT (NULL),
  height int NULL DEFAULT (NULL),
  weight int NULL DEFAULT (NULL),
  status nvarchar(45) NULL DEFAULT (NULL),
  gender nvarchar(45) NULL DEFAULT (NULL),
  role_code2 nvarchar(45) NULL DEFAULT (NULL),
  role_code3 nvarchar(45) NULL DEFAULT (NULL),
  role_name nvarchar(45) NULL DEFAULT (NULL),
  market_value int NULL DEFAULT (NULL),
  contract_expiration date NULL DEFAULT (NULL),
  contract_agency nvarchar(200) NULL DEFAULT (NULL),
  current_team int NULL,
  CONSTRAINT PK_player_idplayer PRIMARY KEY CLUSTERED (idplayer)
)
GO

--
-- Create index [birth_area_idx] on table [scouting].[player]
--
PRINT (N'Create index [birth_area_idx] on table [scouting].[player]')
GO
CREATE INDEX birth_area_idx
  ON scouting.player (birth_area)
GO

--
-- Create foreign key [player$birth_area] on table [scouting].[player]
--
PRINT (N'Create foreign key [player$birth_area] on table [scouting].[player]')
GO
ALTER TABLE scouting.player
  ADD CONSTRAINT player$birth_area FOREIGN KEY (birth_area) REFERENCES scouting.area (idareas)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[player]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[player]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.player', 'SCHEMA', N'scouting', 'TABLE', N'player'
GO

--
-- Create table [scouting].[player_match_stats]
--
PRINT (N'Create table [scouting].[player_match_stats]')
GO
CREATE TABLE scouting.player_match_stats (
  idplayer_match_stats int IDENTITY (54958, 1),
  match int NULL DEFAULT (NULL),
  player int NULL DEFAULT (NULL),
  offensiveDuels int NULL DEFAULT (NULL),
  progressivePasses int NULL DEFAULT (NULL),
  forwardPasses int NULL DEFAULT (NULL),
  crosses int NULL DEFAULT (NULL),
  keyPasses int NULL DEFAULT (NULL),
  defensiveDuels int NULL DEFAULT (NULL),
  interceptions int NULL DEFAULT (NULL),
  recoveries int NULL DEFAULT (NULL),
  successfulPasses real NULL DEFAULT (NULL),
  longPasses int NULL DEFAULT (NULL),
  aerialDuels int NULL DEFAULT (NULL),
  losses int NULL DEFAULT (NULL),
  ownHalfLosses int NULL DEFAULT (NULL),
  opponentHalfRecoveries int NULL DEFAULT (NULL),
  goalKicks int NULL DEFAULT (NULL),
  receivedPass int NULL DEFAULT (NULL),
  dribbles int NULL DEFAULT (NULL),
  touchInBox int NULL DEFAULT (NULL),
  CONSTRAINT PK_player_match_stats_idplayer_match_stats PRIMARY KEY CLUSTERED (idplayer_match_stats)
)
GO

--
-- Create index [match_idx] on table [scouting].[player_match_stats]
--
PRINT (N'Create index [match_idx] on table [scouting].[player_match_stats]')
GO
CREATE INDEX match_idx
  ON scouting.player_match_stats (match)
GO

--
-- Create index [player_idx] on table [scouting].[player_match_stats]
--
PRINT (N'Create index [player_idx] on table [scouting].[player_match_stats]')
GO
CREATE INDEX player_idx
  ON scouting.player_match_stats (player)
GO

--
-- Create foreign key [player_match_stats$pms_match] on table [scouting].[player_match_stats]
--
PRINT (N'Create foreign key [player_match_stats$pms_match] on table [scouting].[player_match_stats]')
GO
ALTER TABLE scouting.player_match_stats
  ADD CONSTRAINT player_match_stats$pms_match FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Create foreign key [player_match_stats$pms_player_fk] on table [scouting].[player_match_stats]
--
PRINT (N'Create foreign key [player_match_stats$pms_player_fk] on table [scouting].[player_match_stats]')
GO
ALTER TABLE scouting.player_match_stats
  ADD CONSTRAINT player_match_stats$pms_player_fk FOREIGN KEY (player) REFERENCES scouting.player (idplayer)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[player_match_stats]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[player_match_stats]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.player_match_stats', 'SCHEMA', N'scouting', 'TABLE', N'player_match_stats'
GO

--
-- Create table [scouting].[match_substitution]
--
PRINT (N'Create table [scouting].[match_substitution]')
GO
CREATE TABLE scouting.match_substitution (
  match int NOT NULL,
  playerIn int NOT NULL,
  playerOut int NOT NULL,
  team int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  CONSTRAINT PK_match_substitution_match PRIMARY KEY CLUSTERED (match, playerIn, playerOut)
)
GO

--
-- Create index [playerIn_idx] on table [scouting].[match_substitution]
--
PRINT (N'Create index [playerIn_idx] on table [scouting].[match_substitution]')
GO
CREATE INDEX playerIn_idx
  ON scouting.match_substitution (playerIn)
GO

--
-- Create index [playerOut_idx] on table [scouting].[match_substitution]
--
PRINT (N'Create index [playerOut_idx] on table [scouting].[match_substitution]')
GO
CREATE INDEX playerOut_idx
  ON scouting.match_substitution (playerOut)
GO

--
-- Create index [team_idx] on table [scouting].[match_substitution]
--
PRINT (N'Create index [team_idx] on table [scouting].[match_substitution]')
GO
CREATE INDEX team_idx
  ON scouting.match_substitution (team)
GO

--
-- Create foreign key [match_substitution$ms_match_fk] on table [scouting].[match_substitution]
--
PRINT (N'Create foreign key [match_substitution$ms_match_fk] on table [scouting].[match_substitution]')
GO
ALTER TABLE scouting.match_substitution
  ADD CONSTRAINT match_substitution$ms_match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Create foreign key [match_substitution$ms_team_fk] on table [scouting].[match_substitution]
--
PRINT (N'Create foreign key [match_substitution$ms_team_fk] on table [scouting].[match_substitution]')
GO
ALTER TABLE scouting.match_substitution
  ADD CONSTRAINT match_substitution$ms_team_fk FOREIGN KEY (team) REFERENCES scouting.team (idteam)
GO

--
-- Create foreign key [match_substitution$playerIn_fk] on table [scouting].[match_substitution]
--
PRINT (N'Create foreign key [match_substitution$playerIn_fk] on table [scouting].[match_substitution]')
GO
ALTER TABLE scouting.match_substitution
  ADD CONSTRAINT match_substitution$playerIn_fk FOREIGN KEY (playerIn) REFERENCES scouting.player (idplayer)
GO

--
-- Create foreign key [match_substitution$playerOut_fk] on table [scouting].[match_substitution]
--
PRINT (N'Create foreign key [match_substitution$playerOut_fk] on table [scouting].[match_substitution]')
GO
ALTER TABLE scouting.match_substitution
  ADD CONSTRAINT match_substitution$playerOut_fk FOREIGN KEY (playerOut) REFERENCES scouting.player (idplayer)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_substitution]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_substitution]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_substitution', 'SCHEMA', N'scouting', 'TABLE', N'match_substitution'
GO

--
-- Create table [scouting].[match_lineup_player_position]
--
PRINT (N'Create table [scouting].[match_lineup_player_position]')
GO
CREATE TABLE scouting.match_lineup_player_position (
  match_lineup_id int NOT NULL,
  player int NOT NULL,
  position nvarchar(45) NOT NULL,
  CONSTRAINT PK_match_lineup_player_position_match_lineup_id PRIMARY KEY CLUSTERED (match_lineup_id, player, position)
)
GO

--
-- Create index [mlpp_player_fk_idx] on table [scouting].[match_lineup_player_position]
--
PRINT (N'Create index [mlpp_player_fk_idx] on table [scouting].[match_lineup_player_position]')
GO
CREATE INDEX mlpp_player_fk_idx
  ON scouting.match_lineup_player_position (player)
GO

--
-- Create foreign key [match_lineup_player_position$match_lineup_id] on table [scouting].[match_lineup_player_position]
--
PRINT (N'Create foreign key [match_lineup_player_position$match_lineup_id] on table [scouting].[match_lineup_player_position]')
GO
ALTER TABLE scouting.match_lineup_player_position
  ADD CONSTRAINT match_lineup_player_position$match_lineup_id FOREIGN KEY (match_lineup_id) REFERENCES scouting.match_lineup (match_lineup_id)
GO

--
-- Create foreign key [match_lineup_player_position$mlpp_player_fk] on table [scouting].[match_lineup_player_position]
--
PRINT (N'Create foreign key [match_lineup_player_position$mlpp_player_fk] on table [scouting].[match_lineup_player_position]')
GO
ALTER TABLE scouting.match_lineup_player_position
  ADD CONSTRAINT match_lineup_player_position$mlpp_player_fk FOREIGN KEY (player) REFERENCES scouting.player (idplayer)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_lineup_player_position]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_lineup_player_position]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_lineup_player_position', 'SCHEMA', N'scouting', 'TABLE', N'match_lineup_player_position'
GO

--
-- Create table [scouting].[match_formation]
--
PRINT (N'Create table [scouting].[match_formation]')
GO
CREATE TABLE scouting.match_formation (
  match int NOT NULL,
  player int NOT NULL,
  team int NOT NULL,
  assists int NULL DEFAULT (NULL),
  goals int NULL DEFAULT (NULL),
  ownGoals int NULL DEFAULT (NULL),
  redCards int NULL DEFAULT (NULL),
  shirtNumber int NULL DEFAULT (NULL),
  yellowCards int NULL DEFAULT (NULL),
  minute int NULL DEFAULT (NULL),
  type nvarchar(45) NULL DEFAULT (NULL),
  CONSTRAINT PK_match_formation_match PRIMARY KEY CLUSTERED (match, player)
)
GO

--
-- Create index [player_idx] on table [scouting].[match_formation]
--
PRINT (N'Create index [player_idx] on table [scouting].[match_formation]')
GO
CREATE INDEX player_idx
  ON scouting.match_formation (player)
GO

--
-- Create index [team_idx] on table [scouting].[match_formation]
--
PRINT (N'Create index [team_idx] on table [scouting].[match_formation]')
GO
CREATE INDEX team_idx
  ON scouting.match_formation (team)
GO

--
-- Create foreign key [match_formation$match_fk] on table [scouting].[match_formation]
--
PRINT (N'Create foreign key [match_formation$match_fk] on table [scouting].[match_formation]')
GO
ALTER TABLE scouting.match_formation
  ADD CONSTRAINT match_formation$match_fk FOREIGN KEY (match) REFERENCES scouting.match (idmatch)
GO

--
-- Create foreign key [match_formation$player_fk] on table [scouting].[match_formation]
--
PRINT (N'Create foreign key [match_formation$player_fk] on table [scouting].[match_formation]')
GO
ALTER TABLE scouting.match_formation
  ADD CONSTRAINT match_formation$player_fk FOREIGN KEY (player) REFERENCES scouting.player (idplayer)
GO

--
-- Create foreign key [match_formation$team_fk] on table [scouting].[match_formation]
--
PRINT (N'Create foreign key [match_formation$team_fk] on table [scouting].[match_formation]')
GO
ALTER TABLE scouting.match_formation
  ADD CONSTRAINT match_formation$team_fk FOREIGN KEY (team) REFERENCES scouting.team (idteam)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_formation]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[match_formation]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.match_formation', 'SCHEMA', N'scouting', 'TABLE', N'match_formation'
GO

--
-- Create table [scouting].[competition]
--
PRINT (N'Create table [scouting].[competition]')
GO
CREATE TABLE scouting.competition (
  idcompetitions int NOT NULL,
  name nvarchar(45) NULL DEFAULT (NULL),
  area int NULL DEFAULT (NULL),
  gender nvarchar(45) NULL DEFAULT (NULL),
  type nvarchar(45) NULL DEFAULT (NULL),
  format nvarchar(45) NULL DEFAULT (NULL),
  divisionLevel int NULL DEFAULT (NULL),
  category nvarchar(45) NULL DEFAULT (NULL),
  custom_name varchar(50) NULL,
  CONSTRAINT PK_competition_idcompetitions PRIMARY KEY CLUSTERED (idcompetitions)
)
GO

--
-- Create index [area_idx] on table [scouting].[competition]
--
PRINT (N'Create index [area_idx] on table [scouting].[competition]')
GO
CREATE INDEX area_idx
  ON scouting.competition (area)
GO

--
-- Create foreign key [competition$area] on table [scouting].[competition]
--
PRINT (N'Create foreign key [competition$area] on table [scouting].[competition]')
GO
ALTER TABLE scouting.competition
  ADD CONSTRAINT competition$area FOREIGN KEY (area) REFERENCES scouting.area (idareas)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[competition]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[competition]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.competition', 'SCHEMA', N'scouting', 'TABLE', N'competition'
GO

--
-- Create table [scouting].[competition_season]
--
PRINT (N'Create table [scouting].[competition_season]')
GO
CREATE TABLE scouting.competition_season (
  idcompetition_season int NOT NULL,
  startDate date NULL DEFAULT (NULL),
  endDate date NULL DEFAULT (NULL),
  name nvarchar(45) NULL DEFAULT (NULL),
  competition int NOT NULL,
  icon nvarchar(45) NULL DEFAULT (NULL),
  CONSTRAINT PK_competition_season_idcompetition_season PRIMARY KEY CLUSTERED (idcompetition_season, competition)
)
GO

--
-- Create index [competition_idx] on table [scouting].[competition_season]
--
PRINT (N'Create index [competition_idx] on table [scouting].[competition_season]')
GO
CREATE INDEX competition_idx
  ON scouting.competition_season (competition)
GO

--
-- Create index [KEY_competition_season_idcompe] on table [scouting].[competition_season]
--
PRINT (N'Create index [KEY_competition_season_idcompe] on table [scouting].[competition_season]')
GO
CREATE UNIQUE INDEX KEY_competition_season_idcompe
  ON scouting.competition_season (idcompetition_season)
GO

--
-- Create foreign key [competition_season$competition] on table [scouting].[competition_season]
--
PRINT (N'Create foreign key [competition_season$competition] on table [scouting].[competition_season]')
GO
ALTER TABLE scouting.competition_season
  ADD CONSTRAINT competition_season$competition FOREIGN KEY (competition) REFERENCES scouting.competition (idcompetitions)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[competition_season]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[competition_season]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.competition_season', 'SCHEMA', N'scouting', 'TABLE', N'competition_season'
GO

--
-- Create table [scouting].[team_competition_season]
--
PRINT (N'Create table [scouting].[team_competition_season]')
GO
CREATE TABLE scouting.team_competition_season (
  team int NOT NULL,
  competition_season int NOT NULL,
  idteam_competition_season int IDENTITY,
  CONSTRAINT PK_team_competition_Season PRIMARY KEY CLUSTERED (team, competition_season),
  CONSTRAINT KEY_team_competition_season_idteam_competition_season UNIQUE (idteam_competition_season)
)
GO

--
-- Create foreign key [FK_team_competition_Season_competition_season] on table [scouting].[team_competition_season]
--
PRINT (N'Create foreign key [FK_team_competition_Season_competition_season] on table [scouting].[team_competition_season]')
GO
ALTER TABLE scouting.team_competition_season
  ADD CONSTRAINT FK_team_competition_Season_competition_season FOREIGN KEY (competition_season) REFERENCES scouting.competition_season (idcompetition_season)
GO

--
-- Create foreign key [FK_team_competition_Season_team] on table [scouting].[team_competition_season]
--
PRINT (N'Create foreign key [FK_team_competition_Season_team] on table [scouting].[team_competition_season]')
GO
ALTER TABLE scouting.team_competition_season
  ADD CONSTRAINT FK_team_competition_Season_team FOREIGN KEY (team) REFERENCES scouting.team (idteam)
GO

--
-- Create table [scouting].[player_positions]
--
PRINT (N'Create table [scouting].[player_positions]')
GO
CREATE TABLE scouting.player_positions (
  player int NOT NULL,
  [percent] int NULL DEFAULT (NULL),
  code nvarchar(45) NOT NULL,
  name nvarchar(45) NULL DEFAULT (NULL),
  team_competition_season int NOT NULL,
  CONSTRAINT PK_player_positions_code PRIMARY KEY CLUSTERED (code, team_competition_season, player)
)
GO

--
-- Create index [player_idx] on table [scouting].[player_positions]
--
PRINT (N'Create index [player_idx] on table [scouting].[player_positions]')
GO
CREATE INDEX player_idx
  ON scouting.player_positions (player)
GO

--
-- Create index [tam_competition_season_fk_idx] on table [scouting].[player_positions]
--
PRINT (N'Create index [tam_competition_season_fk_idx] on table [scouting].[player_positions]')
GO
CREATE INDEX tam_competition_season_fk_idx
  ON scouting.player_positions (team_competition_season)
GO

--
-- Create foreign key [FK_player_positions_team_competition_season] on table [scouting].[player_positions]
--
PRINT (N'Create foreign key [FK_player_positions_team_competition_season] on table [scouting].[player_positions]')
GO
ALTER TABLE scouting.player_positions
  ADD CONSTRAINT FK_player_positions_team_competition_season FOREIGN KEY (team_competition_season) REFERENCES scouting.team_competition_season (idteam_competition_season)
GO

--
-- Create foreign key [player_positions$pp_player_fk] on table [scouting].[player_positions]
--
PRINT (N'Create foreign key [player_positions$pp_player_fk] on table [scouting].[player_positions]')
GO
ALTER TABLE scouting.player_positions
  ADD CONSTRAINT player_positions$pp_player_fk FOREIGN KEY (player) REFERENCES scouting.player (idplayer)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[player_positions]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[player_positions]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.player_positions', 'SCHEMA', N'scouting', 'TABLE', N'player_positions'
GO

--
-- Create table [scouting].[career_entry]
--
PRINT (N'Create table [scouting].[career_entry]')
GO
CREATE TABLE scouting.career_entry (
  player int NOT NULL,
  team_competition_season int NOT NULL,
  appearances int NULL DEFAULT (NULL),
  goal int NULL DEFAULT (NULL),
  minutesPlayed int NULL DEFAULT (NULL),
  penalties int NULL DEFAULT (NULL),
  redCards int NULL DEFAULT (NULL),
  shirtNumber int NULL DEFAULT (NULL),
  substituteIn int NULL DEFAULT (NULL),
  substituteOnBench int NULL DEFAULT (NULL),
  substituteOut int NULL DEFAULT (NULL),
  yellowCard int NULL DEFAULT (NULL),
  team int NULL,
  competition_season int NULL,
  CONSTRAINT PK_career_entry_player PRIMARY KEY CLUSTERED (player, team_competition_season)
)
GO

--
-- Create index [carrer_team_competition_season_fk_idx] on table [scouting].[career_entry]
--
PRINT (N'Create index [carrer_team_competition_season_fk_idx] on table [scouting].[career_entry]')
GO
CREATE INDEX carrer_team_competition_season_fk_idx
  ON scouting.career_entry (team_competition_season)
GO

--
-- Create index [team_competition_season_2fk_idx] on table [scouting].[career_entry]
--
PRINT (N'Create index [team_competition_season_2fk_idx] on table [scouting].[career_entry]')
GO
CREATE INDEX team_competition_season_2fk_idx
  ON scouting.career_entry (team_competition_season)
GO

--
-- Create index [team_competition_season_fk_idx] on table [scouting].[career_entry]
--
PRINT (N'Create index [team_competition_season_fk_idx] on table [scouting].[career_entry]')
GO
CREATE INDEX team_competition_season_fk_idx
  ON scouting.career_entry (team_competition_season)
GO

--
-- Create foreign key [career_entry$carrer_player_fk] on table [scouting].[career_entry]
--
PRINT (N'Create foreign key [career_entry$carrer_player_fk] on table [scouting].[career_entry]')
GO
ALTER TABLE scouting.career_entry
  ADD CONSTRAINT career_entry$carrer_player_fk FOREIGN KEY (player) REFERENCES scouting.player (idplayer)
GO

--
-- Create foreign key [FK_career_entry_team_competition_season] on table [scouting].[career_entry]
--
PRINT (N'Create foreign key [FK_career_entry_team_competition_season] on table [scouting].[career_entry]')
GO
ALTER TABLE scouting.career_entry
  ADD CONSTRAINT FK_career_entry_team_competition_season FOREIGN KEY (team_competition_season) REFERENCES scouting.team_competition_season (idteam_competition_season)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[career_entry]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[career_entry]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.career_entry', 'SCHEMA', N'scouting', 'TABLE', N'career_entry'
GO

--
-- Create table [scouting].[competition_season_round]
--
PRINT (N'Create table [scouting].[competition_season_round]')
GO
CREATE TABLE scouting.competition_season_round (
  idcompetition_season_round int NOT NULL,
  competition_season int NOT NULL,
  startDate date NOT NULL,
  endDate date NOT NULL,
  name nvarchar(45) NULL DEFAULT (NULL),
  CONSTRAINT PK_round_competition_season PRIMARY KEY CLUSTERED (idcompetition_season_round)
)
GO

--
-- Create foreign key [FK_competition_season_round_competition_season] on table [scouting].[competition_season_round]
--
PRINT (N'Create foreign key [FK_competition_season_round_competition_season] on table [scouting].[competition_season_round]')
GO
ALTER TABLE scouting.competition_season_round
  ADD CONSTRAINT FK_competition_season_round_competition_season FOREIGN KEY (competition_season) REFERENCES scouting.competition_season (idcompetition_season)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[competition_season_round]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[competition_season_round]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.`round`', 'SCHEMA', N'scouting', 'TABLE', N'competition_season_round'
GO

--
-- Create table [scouting].[team_competition_season_round]
--
PRINT (N'Create table [scouting].[team_competition_season_round]')
GO
CREATE TABLE scouting.team_competition_season_round (
  idteam_competition_season_round int IDENTITY (1748, 1),
  competition_season_round int NOT NULL,
  team int NOT NULL,
  totalDraws int NULL DEFAULT (NULL),
  totalGoalsAgainst int NULL DEFAULT (NULL),
  totalGoalsFor int NULL DEFAULT (NULL),
  totalLosses int NULL DEFAULT (NULL),
  totalPlayed int NULL DEFAULT (NULL),
  totalPoints int NULL DEFAULT (NULL),
  totalWins int NULL DEFAULT (NULL),
  rank int NULL,
  CONSTRAINT PK_team_competition_season_team PRIMARY KEY CLUSTERED (team, competition_season_round),
  CONSTRAINT KEY_team_competition_season_round_idteam_competition_season_round UNIQUE (idteam_competition_season_round),
  CONSTRAINT team_competition_season$idteam_competition_season_UNIQUE UNIQUE (idteam_competition_season_round)
)
GO

--
-- Create index [competition_season_idx] on table [scouting].[team_competition_season_round]
--
PRINT (N'Create index [competition_season_idx] on table [scouting].[team_competition_season_round]')
GO
CREATE INDEX competition_season_idx
  ON scouting.team_competition_season_round (competition_season_round)
GO

--
-- Create index [team_idx] on table [scouting].[team_competition_season_round]
--
PRINT (N'Create index [team_idx] on table [scouting].[team_competition_season_round]')
GO
CREATE INDEX team_idx
  ON scouting.team_competition_season_round (team)
GO

--
-- Create index [team_idx1] on table [scouting].[team_competition_season_round]
--
PRINT (N'Create index [team_idx1] on table [scouting].[team_competition_season_round]')
GO
CREATE INDEX team_idx1
  ON scouting.team_competition_season_round (idteam_competition_season_round)
GO

--
-- Create foreign key [FK_team_competition_season_round_competition_season_round] on table [scouting].[team_competition_season_round]
--
PRINT (N'Create foreign key [FK_team_competition_season_round_competition_season_round] on table [scouting].[team_competition_season_round]')
GO
ALTER TABLE scouting.team_competition_season_round
  ADD CONSTRAINT FK_team_competition_season_round_competition_season_round FOREIGN KEY (competition_season_round) REFERENCES scouting.competition_season_round (idcompetition_season_round)
GO

--
-- Create foreign key [team_competition_season$tmc_team_fk] on table [scouting].[team_competition_season_round]
--
PRINT (N'Create foreign key [team_competition_season$tmc_team_fk] on table [scouting].[team_competition_season_round]')
GO
ALTER TABLE scouting.team_competition_season_round
  ADD CONSTRAINT team_competition_season$tmc_team_fk FOREIGN KEY (team) REFERENCES scouting.team (idteam)
GO

--
-- Add extended property [MS_SSMA_SOURCE] on table [scouting].[team_competition_season_round]
--
PRINT (N'Add extended property [MS_SSMA_SOURCE] on table [scouting].[team_competition_season_round]')
GO
EXEC sys.sp_addextendedproperty N'MS_SSMA_SOURCE', N'scouting.team_competition_season', 'SCHEMA', N'scouting', 'TABLE', N'team_competition_season_round'
GO
SET NOEXEC OFF
GO